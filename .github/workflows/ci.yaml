name: CI

on:
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Set uv version
  UV_VERSION: "0.9.4"

jobs:
  pre-commit:
    name: Pre-commit hooks (lint/format/spell/type, all files)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"
          cache: pip

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: $UV_VERSION

      # Run the same hooks as locally; include push stage so pre-push hooks run too
      - name: Run pre-commit (all files, commit & push stages)
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --all-files --hook-stage push

  test:
    name: Tests ${{ matrix.os }} / py${{ matrix.python }}
    needs: pre-commit
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-14, windows-latest]
        python: ["3.11", "3.12", "3.13"]
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python }}
          cache: pip

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: $UV_VERSION

      - name: Run tests (full suite)
        run: uv run pytest --cov --cov-branch --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5

  docs:
    name: Build docs (mkdocs)
    needs: [pre-commit, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"
          cache: pip

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: $UV_VERSION

      - name: Build HTML (fail on warnings)
        run: uv run --group docs mkdocs build --strict

      - name: Upload built docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: docs-html
          path: site

  package:
    name: Package smoke test
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"
          cache: pip

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: $UV_VERSION

      - name: Build and install wheel
        run: |
          uv build
          python -m venv pkgtest
          source pkgtest/bin/activate
          python -m pip install --upgrade pip
          python -m pip install dist/*.whl
          python -c "import package_name as m; print(getattr(m, '__version__', 'OK'))"
